jobs:
- job: 'GenerateDocs'
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/4.x-current')
  pool:
    vmImage: 'ubuntu-16.04'
  variables:
    BUILD_REASON: $(Build.Reason)
    BUILD_BRANCH: $(Build.SourceBranch)
  steps:
    - script: ./CI/generate-docs.sh
      displayName: 'Generate docs'

- job: 'Build_Windows'
  pool:
    vmImage: 'vs2017-win2016'
  variables:
    build_config: RelWithDebInfo
    DepsBasePath: 'C:\obsdependencies'
    DepsPath32: '%DepsBasePath%\win32'
    DepsPath64: '%DepsBasePath%\win64'
    QtBaseDir: 'C:\QtDep'
    QTDIR32: '%QtBaseDir%\5.10.1\msvc2017'
    QTDIR64: '%QtBaseDir%\5.10.1\msvc2017_64'
  steps:
    - checkout: self
      submodules: true
    
    - script: ./CI/install-qt-win.cmd
      displayName: 'Install Qt'

    - script: ./CI/download-obs-deps.cmd
      displayName: 'Download OBS dependencies'

    - script: ./CI/install-build-obs.cmd
      displayName: 'Build OBS'

    - script: ./CI/before-build.cmd
      displayName: 'Prepare build'

    - task: MSBuild@1
      displayName: 'Build 32-bit'
      inputs:
        msbuildArguments: '/m /p:Configuration=%build_config%'
        solution: '.\build32\obs-studio.sln'

    - task: MSBuild@1
      displayName: 'Build 64-bit'
      inputs:
        msbuildArguments: '/m /p:Configuration=%build_config%'
        solution: '.\build64\obs-studio.sln'

    # TODO package zip archive and build installer

    - task: PublishBuildArtifacts@1
      inputs:
        pathtoPublish: './release'
        artifactName: 'windows_build'

- job: 'Build_Linux'
  pool:
    vmImage: 'ubuntu-16.04'
  variables:
      BUILD_REASON: $(Build.Reason)
      BRANCH_SHORT_NAME: $(Build.SourceBranchName)
      BRANCH_FULL_NAME: $(Build.SourceBranch)
  steps:
    - checkout: self
      submodules: true

    - script: ./CI/install-dependencies-xenial.sh
      displayName: 'Install dependencies'

    - script: ./CI/build-xenial.sh
      displayName: 'Build obs-websocket'

    - script: ./CI/package-xenial.sh
      displayName: 'Package obs-websocket'

    - task: PublishBuildArtifacts@1
      inputs:
        pathtoPublish: './package'
        artifactName: 'deb_build'

- job: 'Build_macOS'
  pool:
    vmImage: 'macos-10.14'
  steps:
    - checkout: self
      submodules: true

    - script: ./CI/install-dependencies-macos.sh
      displayName: 'Install dependencies'

    - script: ./CI/install-build-obs-macos.sh
      displayName: 'Build OBS'

    - script: ./CI/build-macos.sh
      displayName: 'Build obs-websocket'

    - script: ./CI/package-macos.sh
      displayName: 'Package obs-websocket'

    - task: PublishBuildArtifacts@1
      inputs:
        pathtoPublish: './release'
        artifactName: 'macos_build'
